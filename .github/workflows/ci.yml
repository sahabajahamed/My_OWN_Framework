

name: Java Playwright CI                                           #This is the name of the workflow

on:                                                               #This workflow runs automatically: When you push code to the main branch.,When a pull request targets the main branch.
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:                                                             #build-and-test: Name of the job.
  build-and-test:
    runs-on: ubuntu-latest                                        #runs-on: ubuntu-latest: It uses a GitHub-hosted Ubuntu machine to run this workflow.

    steps:                                                        # Checkout the code
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Java                                           #Sets up Java 17 using the Temurin distribution (a popular open-source JDK).This is necessary to compile and run your Java code.
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Set up Node.js (required for Playwright CLI)          #Set up Node.js (for Playwright CLI)
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Install Playwright CLI                                  #Install Playwright ,Downloads browser engines (Chromium, Firefox, WebKit)
      run: |
        npm install -g playwright
        playwright install

    - name: Cache Maven packages                                      #Speeds up builds by caching previously downloaded Maven libraries.
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Build with Maven                                            #Cleans previous builds and compiles the entire project.
      run: mvn clean install

    - name: Run TestNG Tests                                            #Runs all TestNG tests via Mavenâ€™s test phase
      run: mvn test

    - name: Upload Test Reports
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-reports
        path: target/surefire-reports/
